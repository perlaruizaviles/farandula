exports[`Rendering CounterButtons  Should create an snapshot for CounterButtons 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ButtonGroup>
    <Button
        as="button"
        onClick={[Function]}>
         - 
    </Button>
    <ButtonOr
        text={1} />
    <Button
        as="button"
        onClick={[Function]}>
         + 
    </Button>
</ButtonGroup>,
  "nodes": Array [
    <ButtonGroup>
      <Button
            as="button"
            onClick={[Function]}>
             - 
      </Button>
      <ButtonOr
            text={1} />
      <Button
            as="button"
            onClick={[Function]}>
             + 
      </Button>
</ButtonGroup>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <CounterButtons
        count={1}
        travelerTypeCountChange={[Function]}
        typeTraveler="adults" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "count": 1,
          "travelerTypeCountChange": [Function],
          "typeTraveler": "adults",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ButtonGroup>
          <Button
                    as="button"
                    onClick={[Function]}>
                     - 
          </Button>
          <ButtonOr
                    text={1} />
          <Button
                    as="button"
                    onClick={[Function]}>
                     + 
          </Button>
</ButtonGroup>,
        "_debugID": 2,
        "_renderedOutput": <ButtonGroup>
          <Button
                    as="button"
                    onClick={[Function]}>
                     - 
          </Button>
          <ButtonOr
                    text={1} />
          <Button
                    as="button"
                    onClick={[Function]}>
                     + 
          </Button>
</ButtonGroup>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CounterButtons
    count={1}
    travelerTypeCountChange={[Function]}
    typeTraveler="adults" />,
}
`;
